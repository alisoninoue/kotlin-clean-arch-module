plugins {
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.jpa" version "${kotlinVersion}"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.0.0"
    id "io.micronaut.application" version "1.5.0"
}

application {
    mainClass.set("br.com.poc.configuration.Application")
}

allOpen {
    annotation("io.micronaut.aop.Around")
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
    annotation("io.micronaut.validation.Validated")
}
noArg {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

dependencies {
    compile(project(":application:core"))

    kapt("io.micronaut:micronaut-inject-java")
    kapt("io.micronaut.data:micronaut-data-processor")
    kaptTest("io.micronaut:micronaut-inject-java")
    kaptTest("io.micronaut.data:micronaut-data-processor")

    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-management")

    // Logging
    runtimeOnly("ch.qos.logback:logback-classic:1.2.3")
    implementation("io.github.microutils:kotlin-logging-jvm:2.0.6")

    // Kafka Avro - Confluent
    implementation("io.confluent:kafka-avro-serializer:$confluentVersion")
    compileOnly("io.confluent:kafka-schema-registry:$confluentVersion")
    compileOnly("io.confluent:kafka-schema-registry-client:$confluentVersion")
    implementation("org.apache.avro:avro:1.10.2")
    implementation("io.micronaut.kafka:micronaut-kafka")

    // Database
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("org.postgresql:postgresql:$postgresVersion")

    // Observability
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.jaegertracing:jaeger-thrift:1.5.0")
    runtimeOnly("io.opentracing.contrib:opentracing-kafka-client:0.1.15")

    // Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit5Version")
    testImplementation("org.junit.platform:junit-platform-runner:$junitPlatformVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit5Version")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("io.mockk:mockk:$mockkVersion")
    testImplementation("com.willowtreeapps.assertk:assertk-jvm:0.23.1")
    testRuntimeOnly("org.jetbrains.spek:spek-junit-platform-engine:1.1.5")
    pitest('org.pitest:pitest-junit5-plugin:0.14')
}