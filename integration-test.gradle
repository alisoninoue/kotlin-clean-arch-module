configurations {
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += sourceSets.main.output + sourceSets.test.output
            runtimeClasspath += sourceSets.main.output + sourceSets.test.output
            srcDir file('src/integrationTest/kotlin')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.kotlin.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

compileIntegrationTestKotlin {
    kotlinOptions {
        jvmTarget = '11'
        javaParameters = true
    }
}

dependencies {
    kaptIntegrationTest("io.micronaut:micronaut-inject-java")
    integrationTestImplementation("org.testcontainers:testcontainers:1.15.2")
    integrationTestImplementation("org.testcontainers:postgresql:1.15.2")
    integrationTestImplementation("org.testcontainers:kafka:1.15.2")
    integrationTestImplementation("org.testcontainers:junit-jupiter:1.15.2")
}

task integrationTest(type: Test) {
    useJUnitPlatform()

    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    outputs.upToDateWhen { false }
    mustRunAfter test
    finalizedBy jacocoTestReport
}

//check.dependsOn integrationTest